// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.0.0' apply false
    id 'com.android.library' version '8.0.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.0' apply false
    id 'org.mozilla.rust-android-gradle.rust-android' version '0.9.4'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.23'
}

def LOCAL_PROP_PATH_ATTESTOR = 'ext.attestatorPath'
def LOCAL_PROP_CARGO_PROFILE = 'ext.cargoProfile'
def LOCAL_PROP_DEVICE_ID = 'ext.deviceId'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def attestatorPath_ = properties.getProperty(LOCAL_PROP_PATH_ATTESTOR, null)
def cargoProfile_ = properties.getProperty(LOCAL_PROP_CARGO_PROFILE, 'release')
def deviceId = properties.getProperty(LOCAL_PROP_DEVICE_ID, '')
if (attestatorPath_ == null) {
    throw new Exception("No '${LOCAL_PROP_PATH_ATTESTOR}' property set into your local.properties file!")
}

ext {
    minSdk = 28
    targetSdk = 33
    versionCode = 1
    versionName = "1.0"
    ndkVersion = "25.2.9519653"
    kotlinVersion = '1.7.20'
    ndkAbiFilters = 'armeabi-v7a'

    profile = "$cargoProfile_"
    attestatorPath = "$attestatorPath_"
}

// Device interactions tasks
task launch(type: Exec) {
    executable "./scripts/launch.sh"
    args "$deviceId"
}

task stop(type: Exec) {
    executable "./scripts/stop.sh"
    args "$deviceId"
}